<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2018, University of North Carolina at Chapel Hill -->
<!-- Copyright (c) 2015-2017, Dell EMC -->


<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
	">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/test.metalnx.properties</value>
            </list>
        </property> 
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
	
	<import resource="classpath:test-core-context.xml" />

	<context:annotation-config />

	<bean id="irodsConnectionManager" class="org.irods.jargon.core.connection.IRODSSimpleProtocolManager"
		  factory-method="instance" init-method="initialize" destroy-method="destroy" />

	<bean id="irodsSession" class="org.irods.jargon.core.connection.IRODSSession" factory-method="instance">
		<constructor-arg type="org.irods.jargon.core.connection.IRODSProtocolManager" ref="irodsConnectionManager" />
	</bean>

	<bean id="irodsAccessObjectFactory" class="org.irods.jargon.core.pub.IRODSAccessObjectFactoryImpl" scope="singleton">
		<constructor-arg ref="irodsSession" />
	</bean>

	<bean id="irodsAccount" class="org.irods.jargon.core.connection.IRODSAccount">
		<constructor-arg value="${irods.host}"></constructor-arg>
		<constructor-arg value="${irods.port}"></constructor-arg>
		<constructor-arg value="${irods.admin.user}"></constructor-arg>
		<constructor-arg value="${irods.admin.password}"></constructor-arg>
		<constructor-arg value=""></constructor-arg>
		<constructor-arg value="${irods.zoneName}"></constructor-arg>
		<constructor-arg value="demoResc"></constructor-arg>
	</bean>

    <bean id="ruleService" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.emc.metalnx.services.irods.RuleServiceImpl" />
    </bean>

    <bean id="irodsServices" class="com.emc.metalnx.services.irods.IRODSServicesImpl">
        <constructor-arg ref="irodsAccount"></constructor-arg>
    </bean>

    <context:component-scan base-package="com.emc.metalnx.services.irods com.emc.metalnx.services.ssh
        com.emc.metalnx.services.machine com.emc.metalnx.services.configuration com.emc.metalnx.services.zip" />
        
        <bean id="midTierConfiguration"
		class="org.irods.jargon.midtier.utils.configuration.MidTierConfiguration">
		<property name="utilizePackingStreams" value="${utilize.packing.streams}"/>
		<property name="authType" value="${irods.auth.scheme}" /> <!--  STANDARD,PAM -->
		<property name="defaultStorageResource" value="${default.storage.resource}" />
		<property name="sslNegotiationPolicy" value="${ssl.negotiation.policy}" />
		<property name="computeChecksum" value="${compute.checksum}" />
	</bean>
	
	<!-- settings to influence the behavior of the 'home pages' for data objects 
		and collections -->
	<bean id="dataTyperSettings" class="org.irods.jargon.extensions.datatyper.DataTyperSettings">
		<property name="persistDataTypes" value="${irodsext.datatyper.persist.data.types}" />
		<property name="detailedDetermination" value="${irodsext.datatyper.detailed.determination}" />
	</bean>

	<bean id="dataProfilerSettings"
		class="org.irods.jargon.extensions.dataprofiler.DataProfilerSettings">
		<property name="retrieveReplicas" value="false" />
		<property name="retrieveTickets" value="${irodsext.dataprofiler.retrieve.tickets}" />
		<property name="retrieveStarred" value="${irodsext.dataprofiler.retrieve.starred}" />
		<property name="retrieveShared" value="${irodsext.dataprofiler.retrieve.shared}" />
		<property name="retrieveAcls" value="false" />
		<property name="retrieveMetadata" value="false" />
		<property name="detectMimeAndInfoType" value="true" />
		<property name="resolveMetadataTemplates"
			value="${irodsext.dataprofiler.retrieve.metadata.templates}" />
		<property name="retrieveTagsAndComments"
			value="${irodsext.dataprofiler.retrieve.tags.and.comments}" />
	</bean>

	<bean id="dataTypeResolutionServiceFactory"
		class="org.irodsext.datatyper.IrodsextDataTypeResolutionServiceFactoryImpl">
		<property name="irodsAccessObjectFactory" ref="irodsAccessObjectFactory" />
		<property name="dataTyperSettings" ref="dataTyperSettings" />
	</bean>

	<bean id="dataProfilerFactory"
		class="org.irodsext.dataprofiler.IrodsextDataProfilerFactoryImpl">
		<property name="irodsAccessObjectFactory" ref="irodsAccessObjectFactory" />
		<property name="dataProfilerSettings" ref="dataProfilerSettings" />
		<property name="dataTypeResolutionServiceFactory" ref="dataTypeResolutionServiceFactory" />
		<property name="userService" ref="userService" />
	</bean>
	
	<bean id="mailProperties" class="com.emc.metalnx.services.irods.mail.MailProperties">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="startTlsEnable" value="${mail.smtp.starttls.enable}" />
		<property name="smtpAuth" value="${mail.smtp.auth}" />
		<property name="mailTransportProtocol" value="${mail.transport.protocol}" />
		<property name="debug" value="${mail.debug}" />
		<property name="enabled" value="${mail.enabled}" />
		<property name="from" value="${mail.from}" />
		<property name="to" value="${mail.to}" />
		<property name="cc" value="${mail.cc}" />
	</bean>
	
</beans>
